name: default

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    tags:
      - v**

env:
  BUF_VERSION: "1.10.0"
  BUF_PROTO_DIR: "proto"
  GO_VERSION: "1.18.1"


jobs:
  # --- prepare stage ---
  # compute shared data
  prepare:
    runs-on: ubuntu-22.04
    outputs:
      BUILD_DATE: ${{ steps.info.outputs.BUILD_DATE }}
      VERSION: ${{ steps.info.outputs.VERSION }}
      REVISION: ${{ steps.info.outputs.REVISION }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: export build info
        id: info
        run: |
          VERSION=sha-${GITHUB_SHA::8}
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF/refs\/tags\/v/}
          fi
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "REVISION=${GITHUB_SHA}" >> $GITHUB_OUTPUT
      - name: debug
        run: |
          echo build date: ${{ steps.info.outputs.BUILD_DATE }}
          echo version: ${{ steps.info.outputs.VERSION }}
          echo revision: ${{ steps.info.outputs.REVISION }}


  # --- buf stage ---
  # deal with proto files
  buf:
    runs-on: ubuntu-22.04
    needs:
      - prepare
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup buf
        uses: bufbuild/buf-setup-action@v1
        with:
          version: ${{ env.BUF_VERSION }}
          github_token: ${{ secrets.PAT_TOKEN }}
      - name: buf lint
        uses: bufbuild/buf-lint-action@v1
        with:
          input: ${{ env.BUF_PROTO_DIR }}
      - name: buf breaking
        uses: bufbuild/buf-breaking-action@v1
        with:
          input: ${{ env.BUF_PROTO_DIR }}
          against: https://github.com/absurdlab/tigerd.git#branch=main,ref=HEAD~1,subdir=${{ env.BUF_PROTO_DIR }}
      - name: buf push
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          buf push --tag ${{ needs.prepare.outputs.VERSION }}
        env:
          BUF_TOKEN: ${{ secrets.BUF_TOKEN }}


  # -- main stage ---
  # test, build and release
  main:
    runs-on: ubuntu-22.04
    needs:
      - buf
      - prepare
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: setup cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: setup buf
        uses: bufbuild/buf-setup-action@v1
        with:
          version: ${{ env.BUF_VERSION }}
          github_token: ${{ secrets.PAT_TOKEN }}
      - name: prepare
        run: |
          buf generate && go mod tidy
      - name: unit tests
        run: |
          go test --tags unit ./...
      - name: integration tests
        run: |
          go test --tags integration ./...
      - name: login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.PAT_TOKEN }}
      - name: release snapshot
        if: startsWith(github.ref, 'refs/tags/') != true
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --snapshot --skip-publish --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          VERSION: ${{ needs.prepare.outputs.VERSION }}
      - name: release
        if: startsWith(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --skip-publish --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          VERSION: ${{ needs.prepare.outputs.VERSION }}
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: tigerd
          path: dist
